{
    "openapi": "3.0.0",
    "info": {
      "title": "Authentication API",
      "version": "1.0.0",
      "description": "API for user authentication"
    },
    "servers": [
      {
        "url": "http://localhost:3000"
      }
    ],
    "paths": {
        "/auth/login": {
            "post": {
              "tags": ["Authentication"],
              "summary": "Logs in a user with their credentials",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AuthenticationRequest"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Returns the logged in user's details along with an authentication token",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ResponseGeneric(AuthenticationResponse)"
                      }
                    }
                  }
                },
                "401": {
                  "description": "User authentication failed"
                },
                "500": {
                  "description": "Internal server error occurred"
                }
              }
            }
          },
          "/auth/register": {
            "post": {
              "tags": [
                "Authentication"
              ],
              "summary": "Registers a new user",
              "operationId": "registerUser",
              "requestBody": {
                "description": "The user data to be registered",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/CreateUserDto"
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "The registered user's authentication details",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ResponseGeneric(AuthenticationResponse)"
                      }
                    }
                  }
                },
                "400": {
                  "description": "The request was invalid or incomplete",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ResponseBase"
                      }
                    }
                  }
                },
                "409": {
                  "description": "The email address or username is already in use",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ResponseBase"
                      }
                    }
                  }
                }
              }
            }
          },
          "/auth/confirm/email": {
            "post": {
              "tags": [
                "Authentication"
              ],
              "summary": "Confirm user email",
              "requestBody": {
                "description": "Request body",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/CreateConfirmEmailDto"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Email successfully confirmed",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ResponseBase"
                      }
                    }
                  }
                },
                "401": {
                  "description": "Unauthorized"
                },
                "404": {
                  "description": "Not Found"
                },
                "500": {
                  "description": "Internal Server Error"
                }
              }
            }
          },
          "/auth/forgotPassword": {
            "post": {
              "tags": [
                "Authentication"
              ],
              "summary": "Send password reset email",
              "requestBody": {
                "description": "Request body",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ForgotPasswordDto"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Password reset email sent successfully",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Password reset email sent successfully."
                          }
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "Unauthorized"
                },
                "404": {
                  "description": "Not Found"
                },
                "500": {
                  "description": "Internal Server Error"
                }
              }
            }
          },
          "/auth/changePassword": {
            "put": {
              "tags": ["Authentication"],
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "summary": "Change user's password",
              "description": "Endpoint to change the user's password.",
              "operationId": "changePassword",
              "parameters": [
                {
                  "name": "Authorization",
                  "in": "header",
                  "description": "Bearer token",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "requestBody": {
                "description": "ChangePasswordDto object",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ChangePasswordDto"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Password successfully changed.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ResponseBase"
                      }
                    }
                  }
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ErrorResponse"
                      }
                    }
                  }
                },
                "404": {
                  "description": "User not found",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ErrorResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
    }
}